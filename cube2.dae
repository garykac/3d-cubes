<?xml version="1.0" encoding="UTF-8"?>
<COLLADA xmlns="http://www.collada.org/2005/11/COLLADASchema" version="1.4.1">

<!--
   This file describes a scene with a single cube.

   The vertex, normal, and uv data arrays are different lengths so the triangle
   array needs to index each array separately.

   Here is a rough outline of its structure:

   image "texturePNG"
     init_from "cube-tex.png"
   
   effect "effectTexture"
     surface "textureSurface"
       init_from "texturePNG"
     sampler2D "textureSampler"
       source "textureSurface"
     texture "textureSurface"
   
   material "matTexture"
     instance_effect "effectTexture"
   
   geometry "cubeGeometry"
     mesh
       source "cubeVerticesSource"
         float_array "cubeVerticesData": 8x (x,y,z) = 24
       source "cubeNormalsSource"
         float_array "cubeNormalsData": 6x (x,y,z) = 18
       source "cubeTextureUVsSource"
         float_array "cubeTextureUVsData": 14x (u,v) = 28
       vertices "cubeVertices"
         input POSITION "cubeVerticesSource"
       triangles
         material "cubeTexture"
         input VERTEX "cubeVertices"
         input NORMAL "cubeNormalsSource"
         input TEXCOORD "cubeTextureUVsSource"
         108 indices

   scene "cubeScene"
     node "cube"
       geometry "cubeGeometry"
       bind_material "cubeTexture" -> "matTexture"

 -->
<asset>
 <contributor>
  <authoring_tool>Text editor</authoring_tool>
 </contributor>
 <unit meter="1.000000"/>
 <up_axis>Z_UP</up_axis>
</asset>

<library_images>
 <image id="texturePNG">
  <init_from>cube-tex.png</init_from>
 </image>
</library_images>

<library_effects>
 <effect id="effectTexture">
  <profile_COMMON>
   <newparam sid="textureSurface">
    <surface type="2D">
     <init_from>texturePNG</init_from>
    </surface>
   </newparam>
   <newparam sid="textureSampler">
    <sampler2D>
     <source>textureSurface</source>
    </sampler2D>
   </newparam>
   <technique sid="common">
    <lambert>
     <emission>
      <color sid="emission">0 0 0 1</color>
     </emission>
     <diffuse>
      <texture texture="textureSampler" texcoord="UVMap"/>
     </diffuse>
     <index_of_refraction>
      <float sid="ior">1.5</float>
     </index_of_refraction>
    </lambert>
   </technique>
  </profile_COMMON>
 </effect>
</library_effects>

<library_materials>
 <material id="matTexture" name="MatTexture">
  <instance_effect url="#effectTexture"/>
 </material>
</library_materials>

<library_geometries>
 <geometry id="cubeGeometry" name="CubeGeometry">
  <mesh>

   <!--
    Vertices:                        Faces:
         f- - - -g                          +- - - -+ 
        /.      /|                         /.  5   /|  3 back
       / .     / |                        / .     / |
      e- - - -h  |                   2   +- - - -+ 1|
      |  b . .|. c      z          right |  . . .|. +
      | .     | /       | /y             | . 4   | /
      |.      |/        |/               |.      |/
      a- - - -d         + - - x          +- - - -+
                                              6
                                           bottom
    -->

   <!--
    Vertex data:
    
    8 vertices
     * 3 values (x,y,z) for each vertex
    = 24 values
    -->
   <source id="cubeVerticesSource">
    <float_array id="cubeVerticesData" count="24">
     0 0 0  <!-- 0 a -->
     0 1 0  <!-- 1 b -->
     1 1 0  <!-- 2 c -->
     1 0 0  <!-- 3 d -->
     0 0 1  <!-- 4 e -->
     0 1 1  <!-- 5 f -->
     1 1 1  <!-- 6 g -->
     1 0 1  <!-- 7 h -->
    </float_array>
    <technique_common>
     <accessor source="#cubeVerticesData" count="8" stride="3">
      <param name="X" type="float"/>
      <param name="Y" type="float"/>
      <param name="Z" type="float"/>
     </accessor>
    </technique_common>
   </source>

   <!--
    Normal data:

    6 faces
     * 3 values (x,y,z) for each vertex
    = 18 values
    -->
   <source id="cubeNormalsSource">
    <float_array id="cubeNormalsData" count="18">
      1  0  0  <!-- 0 cghd -->
     -1  0  0  <!-- 1 aefb -->
      0  1  0  <!-- 2 gcbf -->
      0 -1  0  <!-- 3 dhea -->
      0  0  1  <!-- 4 hgfe -->
      0  0 -1  <!-- 5 cdab -->
    </float_array>
    <technique_common>
     <accessor source="#cubeNormalsData" count="6" stride="3">
      <param name="nX" type="float"/>
      <param name="nY" type="float"/>
      <param name="nZ" type="float"/>
     </accessor>
    </technique_common>
   </source>

   <!--
    Texture UV data:
    Some data shared between vertices.
    2 values (u,v) per vertex
    
      +- -f- -g- -+- -+
      |   | 5 |   |   |
      f- -e- -h- -g- -+
      | 2 | 4 | 1 |   |     v
      b- -a- -d- -c- -+     |
      |   | 6 |   |   |     |
      +- -b- -c- -+- -+     + - - u
      |   | 3 |   |   |
      +- -f- -g- -+- -+
    -->
   <source id="cubeTextureUVsSource">
    <float_array id="cubeTextureUVsData" count="28">
     0.25 1.00  <!-- 0 f(5) = f for face 5 -->
     0.50 1.00  <!-- 1 g(5) -->
     0    0.75  <!-- 2 f(2) -->
     0.25 0.75  <!-- 3 e(2,4,5) -->
     0.50 0.75  <!-- 4 h(1,4,5) -->
     0.75 0.75  <!-- 5 g(1) -->
     0    0.50  <!-- 6 b(2) -->
     0.25 0.50  <!-- 7 a(2,4,6) -->
     0.50 0.50  <!-- 8 d(1,4,6) -->
     0.75 0.50  <!-- 9 c(1) -->
     0.25 0.25  <!-- 10 b(3,6) -->
     0.50 0.25  <!-- 11 c(3,6) -->
     0.25 0     <!-- 12 f(3) -->
     0.50 0     <!-- 13 g(3) -->
    </float_array>
    <technique_common>
     <accessor source="#cubeTextureUVsData" count="14" stride="2">
      <param name="U" type="float"/>
      <param name="V" type="float"/>
     </accessor>
    </technique_common>
   </source>

   <vertices id="cubeVertices">
    <input semantic="POSITION" source="#cubeVerticesSource"/>
   </vertices>

   <!--
      3- - - -2
      | -     |
      |   #   |  Each face = 2 triangles (ccw)
      |     - |            = 1-2-3 + 1-3-4
      4- - - -1

    Because the vertex, normal and uv arrays are different lengths, we need a
    separate index for each array.

    6 faces
     * 2 triangles/face
     * 3 vertices/triangle
     * 3 indices/vertex
     = 108 values
    -->
    
   <triangles count="108" material="cubeTexture">
    <input semantic="VERTEX" offset="0" source="#cubeVertices"/>
    <input semantic="NORMAL" offset="1" source="#cubeNormalsSource"/>
    <input semantic="TEXCOORD" offset="2" set="0" source="#cubeTextureUVsSource"/>
    <p>
     <!-- Face 1: cghd = cgh + chd -->
     2 0 9   6 0 5   7 0 4
     2 0 9   7 0 4   3 0 8
     <!-- Face 2: aefb = aef + afb -->
     0 1 7   4 1 3   5 1 2
     0 1 7   5 1 2   1 1 6
     <!-- Face 3: gcbf = gcb + gbf -->
     6 2 13   2 2 11   1 2 10
     6 2 13   1 2 10   5 2 12
     <!-- Face 4: dhea = dhe + dea -->
     3 3 8   7 3 4   4 3 3
     3 3 8   4 3 3   0 3 7
     <!-- Face 5: hgfe = hgf + hfe -->
     7 4 4   6 4 1   5 4 0
     7 4 4   5 4 0   4 4 3
     <!-- Face 6: cdab = cda + cab -->
     2 5 11   3 5 8   0 5 7
     2 5 11   0 5 7   1 5 10
    </p>
   </triangles>

  </mesh>
 </geometry>
</library_geometries>

<library_visual_scenes>
 <visual_scene id="cubeScene">
  <node id="cube" name="Cube">
   <instance_geometry url="#cubeGeometry">
    <bind_material>
     <technique_common>
      <instance_material symbol="cubeTexture" target="#matTexture"/>
     </technique_common>
    </bind_material>
   </instance_geometry>
  </node>
 </visual_scene>
</library_visual_scenes>

<scene>
 <instance_visual_scene url="#cubeScene"/>
</scene>

</COLLADA>
